{"version":3,"sources":["redux/alertActions.js","components/Header.js","redux/taskActions.js","redux/searchAction.js","redux/inputActions.js","components/TaskToDo.js","components/DoneTasks.js","components/SearchedTasks.js","components/TasksList.js","components/App.js","redux/taskReducer.js","redux/alertReducer.js","redux/store.js","redux/searchReducer.js","redux/addInputReducer.js","redux/editInputReducer.js","index.js"],"names":["searchAlert","isTrue","type","Header","state","time","_this2","this","setInterval","setState","moment","format","duplicateCheck","props","duplicateAlertAction","lengthCheck","lengthAlertAction","inputHandlerAction","_this3","undefined","tasks","find","task","text","toLowerCase","trim","inputValue","active","length","e","target","value","preventDefault","addTaskAction","clearAlerts","searchButtonAction","searchTaskAction","searchAlertAction","_this4","_this$props","duplicateAlertMsg","lengthAlertMsg","react_default","a","createElement","Fragment","className","onSubmit","addTaskHandler","placeholder","onChange","inputHandler","autoFocus","onClick","searchTaskHandler","React","Component","connect","alerts","addInput","minimalTaskLengthAlert","taskDuplicatedAlert","dispatch","arguments","edited","id","uuid","addTask","searchButton","searchTask","lengthAlert","duplicateAlert","event","editInput","editAlertMsg","editAlert","editTaskAction","update","editTask","removeTaskAction","removeTask","doneTaskAction","doneTask","editAlertAction","index","taskText","taskEdited","editTaskHandler","editButtonHandler","DoneTasks","SearchedTasks","searchedTasks","searchAlertMsg","editedValue","handleEditButton","handleEditingTask","handleEditInputValue","handleDoneTaskButton","handleRemoveTaskButton","taskToDo","filter","map","components_TaskToDo","key","doneTaskHandler","removeButtonHandler","doneTasks","done","sort","taskA","taskB","slice","components_DoneTasks","searched","components_SearchedTasks","App","components_Header","components_TasksList","taskReducerDefaultState","alertReducerDefaultState","store","createStore","combineReducers","action","concat","Object","toConsumableArray","objectSpread","Date","getTime","includes","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ad583afd.chunk.js","sourcesContent":["export const lengthAlert = isTrue => ({\r\n   type: 'LENGTH_ALERT',\r\n   isTrue\r\n})\r\n\r\nexport const duplicateAlert = isTrue => ({\r\n   type: 'DUPLICATE_ALERT',\r\n   isTrue\r\n})\r\n\r\nexport const editAlert = isTrue => ({\r\n   type: 'EDIT_ALERT',\r\n   isTrue\r\n})\r\n\r\nexport const searchAlert = isTrue => ({\r\n   type: 'SEARCH_ALERT',\r\n   isTrue\r\n})","import React from 'react';\r\nimport moment from 'moment'\r\nimport { connect } from 'react-redux'\r\nimport { addTask } from '../redux/taskActions'\r\nimport { addInput } from '../redux/inputActions'\r\nimport { lengthAlert } from '../redux/alertActions'\r\nimport { duplicateAlert } from '../redux/alertActions'\r\nimport { searchAlert } from '../redux/alertActions'\r\nimport { searchButton } from '../redux/searchAction'\r\nimport { searchTask } from '../redux/searchAction'\r\n\r\n\r\n\r\nclass Header extends React.Component {\r\n   state = {\r\n      time: null\r\n   }\r\n\r\n   componentDidMount() {\r\n      setInterval(() => {\r\n         this.setState({\r\n            time: moment().format('DD.MM.YYYY, HH:mm:ss')\r\n         })\r\n      }, 1000)\r\n   }\r\n\r\n   componentDidUpdate() {\r\n      if (this.duplicateCheck())\r\n         this.props.duplicateAlertAction(false)\r\n      if (this.lengthCheck()) {\r\n         this.props.lengthAlertAction(false)\r\n      }\r\n   }\r\n\r\n   clearAlerts() {\r\n      this.props.inputHandlerAction('')\r\n      this.props.lengthAlertAction(false)\r\n      this.props.duplicateAlertAction(false)\r\n   }\r\n\r\n   duplicateCheck() {\r\n      return this.props.tasks.find(task => task.text.toLowerCase().trim() === this.props.inputValue.toLowerCase().trim() && task.active) === undefined\r\n   }\r\n\r\n   lengthCheck() {\r\n      return this.props.inputValue.trim().length > 2\r\n   }\r\n\r\n   inputHandler(e) {\r\n      return this.props.inputHandlerAction(e.target.value)\r\n   }\r\n\r\n   addTaskHandler(e) {\r\n      e.preventDefault()\r\n      if (this.lengthCheck() && this.duplicateCheck()) {\r\n         this.props.addTaskAction(this.props.inputValue)\r\n         this.clearAlerts()\r\n      }\r\n      else if (!this.lengthCheck()) { this.props.lengthAlertAction(true) }\r\n      else { this.props.duplicateAlertAction(true) }\r\n   }\r\n\r\n   searchTaskHandler() {\r\n      this.clearAlerts()\r\n      this.props.searchButtonAction(this.props.tasks)\r\n      this.props.searchTaskAction(this.props.inputValue)\r\n      this.props.searchAlertAction(true)\r\n   }\r\n\r\n\r\n   render() {\r\n      const {\r\n         inputValue,\r\n         duplicateAlertMsg,\r\n         lengthAlertMsg,\r\n      } = this.props\r\n\r\n      return (<>\r\n         <h1 className=\"header__title\">React ToDoApp</h1>\r\n         <p className=\"header__time\">{this.state.time}</p>\r\n\r\n         <form className=\"header__form\" onSubmit={(e) => this.addTaskHandler(e)}>\r\n            <input className=\"header__form__input\" type=\"text\" placeholder=\"Add or search your task here\" value={inputValue} onChange={(e) => this.inputHandler(e)} autoFocus />\r\n\r\n            <i className=\"fas fa-plus-circle header__form__icon\"\r\n               onClick={(e) => this.addTaskHandler(e)}></i>\r\n\r\n            <i className=\"fas fa-search header__form__icon\" onClick={() => this.searchTaskHandler()}></i>\r\n         </form>\r\n\r\n         {lengthAlertMsg && <p className=\"header__warning-info\">Minimum 3 characters required!!</p>}\r\n         {duplicateAlertMsg && <p className=\"header__warning-info\">Task already on the list!</p>}\r\n\r\n\r\n      </>);\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   const { alerts, addInput } = state\r\n   return {\r\n      tasks: state.tasks,\r\n      lengthAlertMsg: alerts.minimalTaskLengthAlert,\r\n      duplicateAlertMsg: alerts.taskDuplicatedAlert,\r\n      inputValue: addInput\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   addTaskAction: text => dispatch(addTask(text)),\r\n   searchButtonAction: tasks => dispatch(searchButton(tasks)),\r\n   searchTaskAction: text => dispatch(searchTask(text)),\r\n   lengthAlertAction: isTrue => dispatch(lengthAlert(isTrue)),\r\n   duplicateAlertAction: isTrue => dispatch(duplicateAlert(isTrue)),\r\n   searchAlertAction: isTrue => dispatch(searchAlert(isTrue)),\r\n   inputHandlerAction: event => dispatch(addInput(event))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import uuid from 'uuid'\r\n\r\nexport const addTask = (\r\n   text = \"default task\",\r\n   active = true,\r\n   edited = false\r\n) => ({\r\n   type: \"ADD_TASK\",\r\n   task: {\r\n      id: uuid(),\r\n      text: text.trim(),\r\n      active,\r\n      edited\r\n   }\r\n})\r\n\r\nexport const editTask = (id, update) => ({\r\n   type: \"EDIT_TASK\",\r\n   id,\r\n   update,\r\n})\r\n\r\nexport const removeTask = (id) => ({\r\n   type: \"REMOVE_TASK\",\r\n   id\r\n})\r\n\r\nexport const doneTask = (id) => ({\r\n   type: \"DONE_TASK\",\r\n   id\r\n})","export const searchButton = tasks => ({\r\n   type: 'SEARCH_BUTTON',\r\n   tasks\r\n})\r\n\r\nexport const searchTask = text => ({\r\n   type: 'SEARCH_TASK',\r\n   text\r\n})","export const addInput = text => ({\r\n   type: 'ADD_INPUT',\r\n   text\r\n})\r\n\r\nexport const editInput = text => ({\r\n   type: 'EDIT_INPUT',\r\n   text\r\n})","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { editTask, removeTask, doneTask } from '../redux/taskActions'\r\nimport { editInput } from '../redux/inputActions'\r\nimport { editAlert } from '../redux/alertActions'\r\n\r\n\r\nconst TaskToDo = props => {\r\n\r\n   const {\r\n      tasks,\r\n      id,\r\n      index,\r\n      taskText,\r\n      taskEdited,\r\n\r\n      inputValue,\r\n      inputHandlerAction,\r\n\r\n      editTaskAction,\r\n      doneTaskAction,\r\n      removeTaskAction,\r\n\r\n      editAlertMsg,\r\n      editAlertAction,\r\n   } = props\r\n\r\n\r\n   const duplicateCheck = () => tasks.find(task => {\r\n      if (task.id !== props.id) return task.text.toLowerCase().trim() === inputValue.toLowerCase().trim() && task.active\r\n      else return null\r\n   }) === undefined\r\n\r\n   const lengthCheck = () => props.inputValue.trim().length > 2\r\n\r\n   const inputHandler = (e) => {\r\n      editAlertAction(false)\r\n      inputHandlerAction(e.target.value)\r\n   }\r\n\r\n   const editButtonHandler = (id, edited) => {\r\n      inputHandlerAction(taskText)\r\n      editTaskAction(id, edited)\r\n   }\r\n\r\n   const editTaskHandler = (e, id) => {\r\n      e.preventDefault()\r\n      if (lengthCheck() && duplicateCheck()) {\r\n         editAlertAction(false)\r\n         editTaskAction(id, { text: inputValue.trim() })\r\n         editTaskAction(id, { edited: false })\r\n      } else editAlertAction(true)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         {taskEdited ? <form onSubmit={(e) => editTaskHandler(e, props.id)}>\r\n            <input\r\n               className={editAlertMsg ? \"taskToDo__input taskToDo__input--warning\" : \"taskToDo__input\"}\r\n               value={inputValue}\r\n               onChange={(e) => inputHandler(e)}\r\n               autoFocus />\r\n         </form>\r\n            :\r\n            <li className=\"tasksToDo__item\">\r\n               {index + 1}. {taskText}\r\n               {taskText.length > 10 && <br></br>}\r\n               <i id={id} className=\"fas fa-check tasksToDo__icon\" onClick={() => doneTaskAction(props.id)}></i>\r\n               <i id={id} className=\"fas fa-trash tasksToDo__icon\" onClick={() => removeTaskAction(props.id)}></i>\r\n               <i id={id} className=\"fas fa-edit tasksToDo__icon\" onClick={() => editButtonHandler(id, { edited: 'true' })}></i>\r\n            </li>}\r\n\r\n      </>\r\n   );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n   const { editInput, tasks, alerts } = state\r\n   return {\r\n      inputValue: editInput,\r\n      tasks,\r\n      editAlertMsg: alerts.editAlert\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   editTaskAction: (id, update) => dispatch(editTask(id, update)),\r\n   removeTaskAction: id => dispatch(removeTask(id)),\r\n   doneTaskAction: id => dispatch(doneTask(id)),\r\n   inputHandlerAction: text => dispatch(editInput(text)),\r\n   editAlertAction: isTrue => dispatch(editAlert(isTrue))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskToDo);\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst DoneTasks = props => {\r\n   const { task } = props\r\n\r\n   return (\r\n      <li className=\"doneTasks__item\">{task}</li>\r\n   );\r\n}\r\n\r\nexport default DoneTasks;","import React from 'react';\r\n\r\n\r\nconst SearchedTasks = props => {\r\n   const { task } = props\r\n\r\n   return (\r\n      <li className=\"searchedTasks__item\">{task}</li>\r\n   );\r\n}\r\n\r\nexport default SearchedTasks;","import React from 'react';\r\nimport TaskToDo from './TaskToDo'\r\nimport DoneTasks from './DoneTasks'\r\nimport SearchedTasks from './SearchedTasks'\r\nimport { connect } from 'react-redux'\r\nimport { searchAlert } from '../redux/alertActions'\r\n\r\n\r\nconst TasksList = props => {\r\n   const {\r\n      tasks,\r\n      editedValue,\r\n\r\n      handleEditButton,\r\n      handleEditingTask,\r\n      handleEditInputValue,\r\n      handleDoneTaskButton,\r\n      handleRemoveTaskButton,\r\n\r\n      searchAlertAction,\r\n      searchAlertMsg,\r\n      searchedTasks,\r\n   } = props\r\n\r\n\r\n   const taskToDo = tasks.filter(task => task.active).map((task, index) =>\r\n      (\r\n         <TaskToDo\r\n            key={task.id}\r\n            editedValue={editedValue}\r\n            index={index}\r\n\r\n            id={task.id}\r\n            taskText={task.text}\r\n            taskEdited={task.edited}\r\n\r\n            doneTaskHandler={handleDoneTaskButton}\r\n            editButtonHandler={handleEditButton}\r\n            editTaskHandler={handleEditingTask}\r\n            inputHandler={handleEditInputValue}\r\n            removeButtonHandler={handleRemoveTaskButton}\r\n         />))\r\n\r\n   let doneTasks = tasks.filter(task => !task.active)\r\n   doneTasks = doneTasks.sort((taskA, taskB) => taskB.time - taskA.time).slice(0, 3)\r\n\r\n   const done = doneTasks.map(task =>\r\n      (<DoneTasks\r\n         key={task.id}\r\n         task={task.text} />))\r\n\r\n   const searched = searchedTasks.map(task =>\r\n      (<SearchedTasks\r\n         key={task.id}\r\n         task={task.text} />))\r\n\r\n   const handleReturnButton = () => {\r\n      searchAlertAction(false)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <div className=\"tasksList\">\r\n\r\n            {!searchAlertMsg ?\r\n               (taskToDo.length > 0 ?\r\n                  <>\r\n                     <div className=\"tasksToDo\">\r\n                        <h2 className=\"tasksToDo__title\">Tasks to do:</h2>\r\n                        <ul className=\"tasksToDo__list\">{taskToDo}</ul>\r\n                     </div>\r\n\r\n                     <div className=\"doneTasks\">\r\n                        <h2 className=\"doneTasks__title\">Last 3 done tasks:</h2>\r\n                        <ul className=\"doneTasks__list\">{done}</ul>\r\n                     </div>\r\n                  </>\r\n                  :\r\n                  <>\r\n                     <h2 className=\"searchedTasks__title\">No tasks on your list!</h2>\r\n                     <div className=\"doneTasks\">\r\n                        <h2 className=\"doneTasks__title\">Last 3 done tasks:</h2>\r\n                        <ul className=\"doneTasks__list\">{done}</ul>\r\n                     </div>\r\n                  </>)\r\n               :\r\n               <>\r\n                  <h2 className=\"searchedTasks__title\">Search results:</h2>\r\n                  <ul className=\"searchedTasks__list\">{searched}</ul>\r\n                  {!searchedTasks.length && <p className=\"searchedTasks__item\">No results!</p>}\r\n                  <i className=\"fas fa-arrow-alt-circle-left searchedTasks__icon\" onClick={handleReturnButton}></i>\r\n               </>}\r\n         </div>\r\n      </>\r\n   );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   searchAlertAction: isTrue => dispatch(searchAlert(isTrue))\r\n})\r\n\r\nconst mapStateToProps = state => {\r\n   const { tasks, alerts, searchedTasks } = state\r\n   return {\r\n      tasks,\r\n      searchAlertMsg: alerts.searchAlert,\r\n      searchedTasks\r\n   }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksList)\r\n\r\n","import React, { Component } from 'react';\r\nimport Header from './Header'\r\nimport TasksList from './TasksList'\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <header className=\"header\">\r\n          <Header />\r\n        </header>\r\n\r\n        <main className=\"tasksList\">\r\n          <TasksList />\r\n        </main>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import uuid from 'uuid'\r\n\r\nconst taskReducerDefaultState = [{\r\n      id: '123',\r\n      text: \"Task 1\",\r\n      active: true,\r\n      edited: false,\r\n   },\r\n   {\r\n      id: uuid(),\r\n      text: \"Task 2\",\r\n      active: true,\r\n      edited: false,\r\n   },\r\n   {\r\n      id: uuid(),\r\n      text: \"Task 3\",\r\n      active: true,\r\n      edited: false,\r\n   },\r\n]\r\n\r\nexport const taskReducer = (state = taskReducerDefaultState, action) => {\r\n   switch (action.type) {\r\n      case 'ADD_TASK':\r\n         return [\r\n            ...state,\r\n            action.task\r\n         ]\r\n      case 'EDIT_TASK':\r\n         return state.map(task => {\r\n            if (task.id === action.id) {\r\n               return {\r\n                  ...task,\r\n                  ...action.update\r\n               }\r\n            } else {\r\n               return task\r\n            }\r\n         })\r\n\r\n      case 'DONE_TASK':\r\n         return state.map(task => {\r\n            if (task.id === action.id) {\r\n               return {\r\n                  ...task,\r\n                  ...task.active = false,\r\n                  ...task.time = new Date().getTime()\r\n               }\r\n            } else {\r\n               return task\r\n            }\r\n         })\r\n      case 'REMOVE_TASK':\r\n         return state.filter(task => task.id !== action.id)\r\n\r\n      default:\r\n         return state\r\n   }\r\n}","const alertReducerDefaultState = {\r\n   minimalTaskLengthAlert: false,\r\n   taskDuplicatedAlert: false,\r\n   editAlert: false,\r\n   searchAlert: false\r\n}\r\n\r\nexport const alertReducer = (state = alertReducerDefaultState, action) => {\r\n   switch (action.type) {\r\n      case 'LENGTH_ALERT':\r\n         return {\r\n            ...state,\r\n            minimalTaskLengthAlert: action.isTrue\r\n         }\r\n\r\n      case 'DUPLICATE_ALERT':\r\n         return {\r\n            ...state,\r\n            taskDuplicatedAlert: action.isTrue\r\n         }\r\n      case 'EDIT_ALERT':\r\n         return {\r\n            ...state,\r\n            editAlert: action.isTrue\r\n         }\r\n\r\n      case 'SEARCH_ALERT':\r\n         return {\r\n            ...state,\r\n            searchAlert: action.isTrue\r\n         }\r\n\r\n      default:\r\n         return state\r\n   }\r\n}","import { createStore, combineReducers } from 'redux'\r\nimport { taskReducer } from './taskReducer'\r\nimport { alertReducer } from './alertReducer'\r\nimport { addInputReducer } from './addInputReducer';\r\nimport { editInputReducer } from './editInputReducer';\r\nimport { searchReducer } from './searchReducer';\r\n\r\nexport const store = createStore(combineReducers({\r\n   tasks: taskReducer,\r\n   alerts: alertReducer,\r\n   searchedTasks: searchReducer,\r\n   addInput: addInputReducer,\r\n   editInput: editInputReducer,\r\n}))\r\n\r\n\r\n\r\n\r\n","export const searchReducer = (state = [], action) => {\r\n   switch (action.type) {\r\n      case 'SEARCH_BUTTON':\r\n         return [...action.tasks]\r\n      case 'SEARCH_TASK':\r\n         return state.filter(task => task.text.toLowerCase().includes(action.text.toLowerCase()) && task.active === true)\r\n      default:\r\n         return state\r\n   }\r\n}","export const addInputReducer = (state = '', action) => {\r\n   switch (action.type) {\r\n      case 'ADD_INPUT':\r\n         return action.text\r\n      default:\r\n         return state\r\n   }\r\n}","export const editInputReducer = (state = '', action) => {\r\n   switch (action.type) {\r\n      case 'EDIT_INPUT':\r\n         return action.text\r\n      default:\r\n         return state\r\n   }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { store } from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport './styles/index.css';\r\nimport './styles/App.css';\r\nimport './styles/Header.css';\r\nimport './styles/DoneTasks.css';\r\nimport './styles/SearchedTasks.css';\r\nimport './styles/TaskToDo.css';\r\n\r\n\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n      < App />\r\n   </Provider>,\r\n   document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["components/Header.js","components/TasksToDo.js","components/DoneTasks.js","components/SearchedTasks.js","components/TasksList.js","components/App.js","index.js"],"names":["Header","state","time","_this2","this","setInterval","setState","moment","format","_this$props","props","alert","duplicate","value","handleAddTaskButton","handleHeaderInputValue","handleHeaderInputSubmit","handleSearchTaskButton","react_default","a","createElement","Fragment","className","onSubmit","type","placeholder","onChange","autoFocus","onClick","React","Component","TasksToDo","doneTaskHandler","editButtonHandler","editedValue","editTaskHandler","id","index","inputHandler","task","taskEdited","removeButtonHandler","e","length","DoneTasks","SearchedTasks","TasksList","handleEditButton","handleEditingTask","handleEditInputValue","handleDoneTaskButton","handleRemoveTaskButton","handleReturnButton","searchSection","searchedTasks","tasksToDo","activeTasks","filter","active","doneTasks","sort","taskA","taskB","slice","map","components_TasksToDo","key","text","edited","done","components_DoneTasks","searched","components_SearchedTasks","App","editedInputValue","headerInputValue","minimalTaskLengthAlert","searchSectionActive","taskDuplicatedAlert","tasks","uuid","_this","target","preventDefault","Object","toConsumableArray","duplicateCheck","push","forEach","Date","getTime","tasksAfterRemoval","searchResult","result","toLowerCase","includes","trim","prevProps","prevState","components_Header","components_TasksList","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.962920d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\nclass Header extends React.Component {\r\n   state = {\r\n      time: null\r\n   }\r\n\r\n   componentDidMount() {\r\n      setInterval(() => {\r\n         this.setState({\r\n            time: moment().format('DD.MM.YYYY, HH:mm:ss')\r\n         })\r\n      }, 1000)\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         alert,\r\n         duplicate,\r\n         value,\r\n         handleAddTaskButton,\r\n         handleHeaderInputValue,\r\n         handleHeaderInputSubmit,\r\n         handleSearchTaskButton,\r\n      }\r\n         = this.props\r\n\r\n      return (<>\r\n         <h1 className=\"header header__title\">React ToDoApp</h1>\r\n         <p className=\"header header__time\">{this.state.time}</p>\r\n\r\n         <form className=\"header header__form\" onSubmit={handleHeaderInputSubmit}>\r\n            <input className=\"header header__input\" type=\"text\" placeholder=\"Add or search your task here\" value={value} onChange={handleHeaderInputValue} autoFocus />\r\n\r\n            <i className=\"fas fa-plus-circle header header__icon\" onClick={handleAddTaskButton}></i>\r\n            <i className=\"fas fa-search header header__icon\" onClick={handleSearchTaskButton}></i>\r\n         </form>\r\n\r\n         {alert && <p className=\"header header__warning-info\">Minimum 3 characters required!!</p>}\r\n         {duplicate && <p className=\"header header__warning-info\">Task already on the list!</p>}\r\n\r\n\r\n      </>);\r\n   }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst TasksToDo = props => {\r\n   const {\r\n      doneTaskHandler,\r\n      editButtonHandler,\r\n      editedValue,\r\n      editTaskHandler,\r\n      id,\r\n      index,\r\n      inputHandler,\r\n      task,\r\n      taskEdited,\r\n      removeButtonHandler,\r\n   } = props\r\n\r\n\r\n\r\n   return (\r\n      <>\r\n         {taskEdited ? <form onSubmit={(e) => editTaskHandler(e, id)}>\r\n            <input className=\"taksToDo taskToDo__input\" value={editedValue} onChange={inputHandler} autoFocus />\r\n         </form>\r\n            :\r\n            <li className=\"tasksToDo__item\">\r\n               {index + 1}. {task}\r\n               {task.length > 10 && <br></br>}\r\n               <i id={id} className=\"fas fa-check tasksToDo__icon\" onClick={() => doneTaskHandler(id)}></i>\r\n               <i id={id} className=\"fas fa-trash tasksToDo__icon\" onClick={() => removeButtonHandler(id)}></i>\r\n               <i id={id} className=\"fas fa-edit tasksToDo__icon\" onClick={() => editButtonHandler(id, task)}></i>\r\n            </li>}\r\n\r\n      </>\r\n   );\r\n};\r\n\r\n\r\n\r\nexport default TasksToDo;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst DoneTasks = props => {\r\n   const { task } = props\r\n\r\n   return (\r\n      <li className=\"doneTasks__item\">{task}</li>\r\n   );\r\n}\r\n\r\nexport default DoneTasks;","import React from 'react';\r\n\r\n\r\nconst SearchedTasks = props => {\r\n   const { task } = props\r\n\r\n   return (\r\n      <li className=\"searchedTasks__item\">{task}</li>\r\n   );\r\n}\r\n\r\nexport default SearchedTasks;","import React from 'react';\nimport TasksToDo from './TasksToDo'\nimport DoneTasks from './DoneTasks'\nimport SearchedTasks from './SearchedTasks'\n\n\nconst TasksList = props => {\n   const {\n      editedValue,\n      handleEditButton,\n      handleEditingTask,\n      handleEditInputValue,\n      handleDoneTaskButton,\n      handleRemoveTaskButton,\n      handleReturnButton,\n      searchSection,\n      searchedTasks,\n      tasksToDo,\n   } = props\n\n   const activeTasks = tasksToDo.filter(task => task.active)\n\n   let doneTasks = tasksToDo.filter(task => !task.active)\n   doneTasks = doneTasks.sort((taskA, taskB) => taskB.time - taskA.time).slice(0, 3)\n\n   const active = activeTasks.map((task, index) =>\n      (<TasksToDo\n         editedValue={editedValue}\n         id={task.id}\n         index={index}\n         key={task.id}\n         task={task.text}\n         taskEdited={task.edited}\n\n         doneTaskHandler={handleDoneTaskButton}\n         editButtonHandler={handleEditButton}\n         editTaskHandler={handleEditingTask}\n         inputHandler={handleEditInputValue}\n         removeButtonHandler={handleRemoveTaskButton}\n      />))\n\n   const done = doneTasks.map(task =>\n      (<DoneTasks\n         key={task.id}\n         task={task.text} />))\n\n   const searched = searchedTasks.map(task =>\n      (<SearchedTasks\n         key={task.id}\n         task={task.text} />))\n\n\n   return (\n      <>\n         <div className=\"tasksList tasksToDo\">\n            {\n               !searchSection ?\n                  (active.length > 0 ?\n                     <>\n                        <h2 className=\"tasksToDo__title\">Tasks to do:</h2>\n                        <ul className=\"tasksToDo__list\">{active}</ul>\n                     </>\n                     :\n                     <h2 className=\"searchedTasks__title\">No tasks on your list!</h2>)\n                  :\n                  <>\n                     <h2 className=\"searchedTasks__title\">Search results:</h2>\n                     <ul className=\"searchedTasks__list\">{searched}</ul>\n                     {!searchedTasks.length && <p className=\"searchedTasks__item\">No results!</p>}\n                     <i className=\"fas fa-arrow-alt-circle-left searchedTasks__icon\" onClick={handleReturnButton}></i>\n                  </>\n            }\n\n         </div>\n\n         {!searchSection ?\n            <>\n               <div className=\"doneTasks\">\n                  <h2 className=\"doneTasks__title\">Last 3 done tasks:</h2>\n                  <ul className=\"doneTasks__list\">{done}</ul>\n               </div>\n            </>\n            : null}\n\n\n      </>\n   );\n}\n\nexport default TasksList\n\n","import React, { Component } from 'react';\nimport Header from './Header'\nimport TasksList from './TasksList'\nimport uuid from 'uuid'\n\n\nclass App extends Component {\n  state = {\n    editedInputValue: '',\n    headerInputValue: '',\n    minimalTaskLengthAlert: false,\n    searchSectionActive: false,\n    searchedTasks: [],\n    taskDuplicatedAlert: false,\n    tasks: [\n      {\n        id: uuid(),\n        text: \"Task 1\",\n        active: true,\n        edited: false,\n      },\n      {\n        id: uuid(),\n        text: \"Task 2\",\n        active: true,\n        edited: false,\n      },\n      {\n        id: uuid(),\n        text: \"Task 3\",\n        active: true,\n        edited: false,\n      },\n    ],\n  }\n\n  //INPUT HANDLERS\n\n  handleHeaderInputValue = e => {\n    this.setState({\n      headerInputValue: e.target.value\n    })\n  }\n\n  handleHeaderInputSubmit = e => {\n    e.preventDefault()\n    this.handleAddTaskButton()\n  }\n\n  handleEditInputValue = e => {\n    this.setState(({\n      editedInputValue: e.target.value\n    }))\n  }\n\n  //ADDING TASK\n  handleAddTaskButton = () => {\n    const tasksToDo = [...this.state.tasks]\n    const duplicateCheck = tasksToDo.filter(task => task.text === this.state.headerInputValue && task.active).length\n\n    if (this.state.headerInputValue.length <= 2) {\n      this.setState({\n        minimalTaskLengthAlert: true\n      })\n    }\n\n    else if (duplicateCheck) {\n      this.setState({\n        taskDuplicatedAlert: true\n      })\n    }\n    else {\n      tasksToDo.push(\n        {\n          id: uuid(),\n          text: this.state.headerInputValue,\n          active: true,\n          edited: false,\n        }\n      )\n      this.setState({\n        tasks: tasksToDo,\n        headerInputValue: ''\n      })\n    }\n  }\n\n  //CHANGING TASK STATUS\n  handleDoneTaskButton = id => {\n    const tasks = [...this.state.tasks]\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = !task.active\n        task.time = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks,\n    })\n  }\n\n  //EDITING TASK\n  handleEditButton = (id, task) => {\n    if (!this.state.editedInputValue) {\n      this.setState({\n        editedInputValue: task\n      })\n\n      const tasks = [...this.state.tasks]\n      tasks.forEach(task => {\n        if (task.id === id) {\n          task.edited = !task.edited\n        }\n      })\n      this.setState({\n        tasks,\n      })\n    }\n  }\n\n  handleEditingTask = (e, id) => {\n    e.preventDefault()\n    const tasks = [...this.state.tasks]\n\n    if (this.state.editedInputValue.length < 3) { alert('Task too short') }\n    else {\n      tasks.map(task => {\n        if (task.id === id) {\n          task.text = this.state.editedInputValue\n          task.edited = false\n        } return null\n      })\n\n      this.setState(() => ({\n        editedInputValue: '',\n        tasks,\n      }))\n    }\n  }\n\n  //REMOVING TASK\n  handleRemoveTaskButton = id => {\n    const tasks = [...this.state.tasks]\n    const tasksAfterRemoval = tasks.filter((task) => {\n      if (task.id !== id) {\n        return task\n      } return null\n    })\n\n    this.setState({\n      tasks: tasksAfterRemoval,\n    })\n  }\n\n  //SEARCHING TASK\n  handleSearchTaskButton = () => {\n    const tasks = [...this.state.tasks]\n\n    if (this.state.headerInputValue.length) {\n      const searchResult = tasks.filter((result) => result.text.toLowerCase().includes(this.state.headerInputValue.trim().toLowerCase()) && result.active\n      )\n\n      this.setState({\n        headerInputValue: '',\n        searchSectionActive: true,\n        searchedTasks: [...searchResult]\n      })\n    }\n  }\n\n  handleReturnButton = () => {\n    this.setState({\n      searchSectionActive: false,\n    })\n  }\n\n  //ALERT HANDLERS\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.minimalTaskLengthAlert && this.state.headerInputValue.length > 2) {\n      this.setState({\n        minimalTaskLengthAlert: false\n      })\n    }\n    else if (prevState.headerInputValue !== this.state.headerInputValue) {\n      this.setState({\n        taskDuplicatedAlert: false\n      })\n    }\n  }\n\n  //RENDERING\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <header className=\"header\">\n          <Header\n            alert={this.state.minimalTaskLengthAlert}\n            duplicate={this.state.taskDuplicatedAlert}\n            value={this.state.headerInputValue}\n\n            handleAddTaskButton={this.handleAddTaskButton}\n            handleHeaderInputSubmit={this.handleHeaderInputSubmit}\n            handleHeaderInputValue={this.handleHeaderInputValue}\n            handleSearchTaskButton={this.handleSearchTaskButton}\n          />\n        </header>\n\n        <main className=\"tasksList\">\n          <TasksList\n            editedValue={this.state.editedInputValue}\n            searchSection={this.state.searchSectionActive}\n            searchedTasks={this.state.searchedTasks}\n            tasksToDo={this.state.tasks}\n\n            handleEditButton={this.handleEditButton}\n            handleEditInputValue={this.handleEditInputValue}\n            handleEditingTask={this.handleEditingTask}\n            handleDoneTaskButton={this.handleDoneTaskButton}\n            handleReturnButton={this.handleReturnButton}\n            handleRemoveTaskButton={this.handleRemoveTaskButton}\n          />\n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.css';\nimport './styles/App.css';\nimport './styles/Header.css';\nimport './styles/DoneTasks.css';\nimport './styles/SearchedTasks.css';\nimport './styles/TasksToDo.css';\n\nReactDOM.render(< App />, document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["components/Header.js","components/TasksToDo.js","components/DoneTasks.js","components/SearchedTasks.js","components/TasksList.js","components/App.js","index.js"],"names":["Header","props","value","input","add","submit","alert","search","duplicate","react_default","a","createElement","Fragment","className","onSubmit","type","placeholder","onChange","onClick","TasksToDo","task","id","done","removed","index","length","DoneTasks","SearchedTasks","TasksList","tasksToDo","doneTask","searchStatus","returnHandler","searchedTasks","removedTask","activeTasks","filter","active","doneTasks","sort","taskA","taskB","time","slice","map","components_TasksToDo","key","text","components_DoneTasks","searched","components_SearchedTasks","App","state","tasks","idValue","handleInputValue","e","_this","setState","target","handleSubmit","preventDefault","handleAddButton","Object","toConsumableArray","duplicateCheck","push","handleDoneTask","forEach","Date","getTime","handleRemovedTask","tasksAfterRemoval","handleSearchedTask","searchResult","result","toLowerCase","includes","trim","handleReturn","prevProps","prevState","this","components_Header","components_TasksList","Component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.733725f8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = props => {\r\n   const { value, input, add, submit, alert, search, duplicate } = props\r\n   return (\r\n      <>\r\n         <h1 className=\"header header__title\">React ToDoApp</h1>\r\n\r\n         <form className=\"header header__form\" onSubmit={submit}>\r\n            <input className=\"header header__input\" type=\"text\" placeholder=\"Add or search your task here\" value={value} onChange={input} />\r\n\r\n            <i className=\"fas fa-plus-circle header header__icon\" onClick={add}></i>\r\n            <i className=\"fas fa-search header header__icon\" onClick={search}></i>\r\n         </form>\r\n\r\n         {alert && <p className=\"header header__warning-info\">Minimum 3 characters required!!</p>}\r\n         {duplicate && <p className=\"header header__warning-info\">Task already on the list!</p>}\r\n\r\n\r\n      </>\r\n\r\n   );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n\r\nconst TasksToDo = props => {\r\n   const { task, id, done, removed, index } = props\r\n   return (\r\n      <>\r\n         <li className=\"tasksToDo__item\">\r\n            {index + 1}. {task}\r\n            {task.length > 15 && <br></br>}\r\n            <i id={id} className=\"fas fa-check tasksToDo__icon\" onClick={() => done(id)}></i>\r\n            <i id={id} className=\"fas fa-trash tasksToDo__icon\" onClick={() => removed(id)}></i>\r\n         </li>\r\n      </>\r\n   );\r\n};\r\n\r\n\r\nexport default TasksToDo;\r\n\r\n","import React from 'react';\r\n\r\n\r\nconst DoneTasks = props => {\r\n   const { task } = props\r\n\r\n   return (\r\n      <li className=\"doneTasks__item\">{task}</li>\r\n   );\r\n}\r\n\r\nexport default DoneTasks;","import React from 'react';\r\n\r\n\r\nconst SearchedTasks = props => {\r\n   const { task } = props\r\n\r\n   return (\r\n      <li className=\"searchedTasks__item\">{task}</li>\r\n   );\r\n}\r\n\r\nexport default SearchedTasks;","import React from 'react';\nimport TasksToDo from './TasksToDo'\nimport DoneTasks from './DoneTasks'\nimport SearchedTasks from './SearchedTasks'\n\n\nconst TasksList = props => {\n   const { tasksToDo, doneTask, searchStatus, returnHandler, searchedTasks, removedTask } = props\n\n   const activeTasks = tasksToDo.filter(task => task.active)\n\n   let doneTasks = tasksToDo.filter(task => !task.active)\n   doneTasks = doneTasks.sort((taskA, taskB) => taskB.time - taskA.time).slice(0, 3)\n\n   const active = activeTasks.map((task, index) =>\n      (<TasksToDo\n         key={task.id}\n         task={task.text}\n         id={task.id}\n         index={index}\n         done={doneTask}\n         removed={removedTask} />))\n\n   const done = doneTasks.map(task =>\n      (<DoneTasks\n         key={task.id}\n         task={task.text} />))\n\n   const searched = searchedTasks.map(task =>\n      (<SearchedTasks\n         key={task.id}\n         task={task.text} />))\n\n\n   return (\n      <>\n         <div className=\"tasksList tasksToDo\">\n            {\n               !searchStatus ?\n                  (active.length > 0 ?\n                     <>\n                        <h2 className=\"tasksToDo__title\">Tasks to do:</h2>\n                        <ul className=\"tasksToDo__list\">{active}</ul>\n                     </>\n                     :\n                     <h2>No tasks on list!</h2>)\n                  :\n                  <>\n                     <h2 className=\"searchedTasks__title\">Search results:</h2>\n                     <ul className=\"searchedTasks__list\">{searched}</ul>\n                     {!searchedTasks.length && <p className=\"searchedTasks__item\">No results!</p>}\n                     <i className=\"fas fa-arrow-alt-circle-left searchedTasks__icon\" onClick={returnHandler}></i>\n                  </>\n            }\n\n         </div>\n\n         {!searchStatus ?\n            <>\n               <div className=\"doneTasks\">\n                  <h2 className=\"doneTasks__title\">Last 3 done tasks:</h2>\n                  <ul className=\"doneTasks__list\">{done}</ul>\n               </div>\n            </>\n            : null}\n\n\n      </>\n   );\n}\n\nexport default TasksList\n\n","import React, { Component } from 'react';\nimport Header from './Header'\nimport TasksList from './TasksList'\n\n\nclass App extends Component {\n  state = {\n    value: '',\n    alert: false,\n    duplicate: false,\n    tasks: [\n      {\n        id: 0,\n        text: \"Task 1\",\n        active: true,\n      },\n      {\n        id: 1,\n        text: \"Task 2\",\n        active: true,\n      },\n      {\n        id: 2,\n        text: \"Task 3\",\n        active: true,\n      },\n    ],\n    search: false,\n    searchedTasks: []\n  }\n\n  idValue = 3;\n\n  //Input handlers\n\n  handleInputValue = e => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.handleAddButton()\n  }\n\n  //adding task handlers\n\n  handleAddButton = () => {\n    const tasksToDo = [...this.state.tasks]\n    const duplicateCheck = tasksToDo.filter(task => task.text === this.state.value && task.active).length\n\n    if (this.state.value.length <= 2) {\n      this.setState({\n        alert: true\n      })\n    }\n\n    else if (duplicateCheck) {\n      this.setState({\n        duplicate: true\n      })\n    }\n    else {\n      tasksToDo.push(\n        {\n          id: this.idValue,\n          text: this.state.value,\n          active: true,\n        }\n      )\n      this.setState({\n        tasks: tasksToDo,\n        value: ''\n      })\n      this.idValue++\n    }\n  }\n\n  // changing task status handlers\n  handleDoneTask = id => {\n    const tasks = [...this.state.tasks]\n    tasks.forEach(task => {\n      if (task.id === id) {\n        task.active = !task.active\n        task.time = new Date().getTime()\n      }\n    })\n    this.setState({\n      tasks,\n    })\n  }\n\n  handleRemovedTask = id => {\n    const tasks = [...this.state.tasks]\n    const tasksAfterRemoval = tasks.filter((task) => {\n      if (task.id !== id) {\n        return task\n      } return null\n    })\n\n    this.setState({\n      tasks: tasksAfterRemoval,\n    })\n  }\n\n  //searching handlers\n  handleSearchedTask = () => {\n    const tasks = [...this.state.tasks]\n\n    if (this.state.value.length) {\n      const searchResult = tasks.filter((result) => result.text.toLowerCase().includes(this.state.value.trim().toLowerCase()) && result.active\n      )\n\n      this.setState({\n        value: '',\n        search: true,\n        searchedTasks: [...searchResult]\n      })\n    }\n  }\n\n  handleReturn = () => {\n    this.setState({\n      search: false,\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.alert && this.state.value.length > 2) {\n      this.setState({\n        alert: false\n      })\n    }\n    else if (prevState.value !== this.state.value) {\n      this.setState({\n        duplicate: false\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <header className=\"header\">\n          <Header\n            value={this.state.value}\n            input={this.handleInputValue}\n            add={this.handleAddButton}\n            submit={this.handleSubmit}\n            alert={this.state.alert}\n            search={this.handleSearchedTask}\n            duplicate={this.state.duplicate} />\n        </header>\n\n        <main className=\"tasksList\">\n          <TasksList\n            tasksToDo={this.state.tasks}\n            doneTask={this.handleDoneTask}\n            searchStatus={this.state.search}\n            searchedTasks={this.state.searchedTasks}\n            returnHandler={this.handleReturn}\n            removedTask={this.handleRemovedTask} />\n        </main>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './styles/index.css';\nimport './styles/App.css';\nimport './styles/Header.css';\nimport './styles/DoneTasks.css';\nimport './styles/SearchedTasks.css';\nimport './styles/TasksToDo.css';\n\nReactDOM.render(< App />, document.getElementById('root'));"],"sourceRoot":""}